plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.6'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'com.example'
version = '1.0'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation "org.springframework.boot:spring-boot-starter-data-jpa"
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor ('org.projectlombok:lombok')
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

	// kargo, ide
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

	// local, test
	runtimeOnly 'com.h2database:h2'

	// third party
	implementation group: 'com.auth0', name: 'java-jwt', version: '4.3.0'
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}


tasks.named('test') {
	outputs.dir snippetsDir
	systemProperty 'file.encoding', 'UTF-8'
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}

bootJar {
	dependsOn asciidoctor
	copy {
		// src/docs/asciidoc == from 경로
		from "${asciidoctor.outputDir}"
		into 'src/main/resources/static/docs'    // /static/docs로 복사!
	}
}

jar {
	enabled = false
}