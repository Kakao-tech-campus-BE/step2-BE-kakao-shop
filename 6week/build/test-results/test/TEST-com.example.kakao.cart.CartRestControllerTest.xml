<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.example.kakao.cart.CartRestControllerTest" tests="6" skipped="0" failures="0" errors="0" timestamp="2023-08-02T06:49:25" hostname="hoyaiui-MacBookAir.local" time="0.353">
  <properties/>
  <testcase name="update_fail_test2()" classname="com.example.kakao.cart.CartRestControllerTest" time="0.211"/>
  <testcase name="update_fail_test()" classname="com.example.kakao.cart.CartRestControllerTest" time="0.024"/>
  <testcase name="update_test()" classname="com.example.kakao.cart.CartRestControllerTest" time="0.036"/>
  <testcase name="addCartList_fail_test()" classname="com.example.kakao.cart.CartRestControllerTest" time="0.03"/>
  <testcase name="addCartList_test()" classname="com.example.kakao.cart.CartRestControllerTest" time="0.027"/>
  <testcase name="findAll_test()" classname="com.example.kakao.cart.CartRestControllerTest" time="0.022"/>
  <system-out><![CDATA[15:49:23.489 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
15:49:23.494 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
15:49:23.510 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [com.example.kakao.cart.CartRestControllerTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
15:49:23.514 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.example.kakao.cart.CartRestControllerTest], using SpringBootContextLoader
15:49:23.516 [Test worker] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [com.example.kakao.cart.CartRestControllerTest]: class path resource [com/example/kakao/cart/CartRestControllerTest-context.xml] does not exist
15:49:23.516 [Test worker] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [com.example.kakao.cart.CartRestControllerTest]: class path resource [com/example/kakao/cart/CartRestControllerTestContext.groovy] does not exist
15:49:23.516 [Test worker] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [com.example.kakao.cart.CartRestControllerTest]: no resource found for suffixes {-context.xml, Context.groovy}.
15:49:23.516 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.example.kakao.cart.CartRestControllerTest]: CartRestControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:49:23.576 [Test worker] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/Users/lhh/kakao-6th-deploy/build/classes/java/main/com/example/kakao/KakaoApplication.class]
15:49:23.577 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.example.kakao.KakaoApplication for test class com.example.kakao.cart.CartRestControllerTest
15:49:23.621 [Test worker] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [com.example.kakao.cart.CartRestControllerTest]: using defaults.
15:49:23.621 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
15:49:23.629 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4a325eb9, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3dedb4a6, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@57f64f5e, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@415e0bcb, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@194152cf, org.springframework.test.context.support.DirtiesContextTestExecutionListener@49d98dc5, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2c30b71f, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1d81e101, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@ec50f54, org.springframework.test.context.event.EventPublishingTestExecutionListener@bf71cec, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@22d6cac2, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@30cdae70, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1654a892, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2577d6c8, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3163987e, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@6c000e0c, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@5f233b26]
15:49:23.631 [Test worker] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@47dd778 testClass = CartRestControllerTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@15515c51 testClass = CartRestControllerTest, locations = '{}', classes = '{class com.example.kakao.KakaoApplication}', contextInitializerClasses = '[]', activeProfiles = '{test}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@4275c20c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@63da79bb, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3383649e, [ImportsContextCustomizer@36a7abe1 key = [@org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.test.context.ActiveProfiles(profiles={}, resolver=org.springframework.test.context.ActiveProfilesResolver.class, value={"test"}, inheritProfiles=true), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value={}, exclude={}, classes={}), @org.springframework.test.context.jdbc.Sql(executionPhase=BEFORE_TEST_METHOD, statements={}, scripts={}, value={"classpath:db/teardown.sql"}, config=@org.springframework.test.context.jdbc.SqlConfig(blockCommentStartDelimiter="", commentPrefix="", transactionMode=DEFAULT, blockCommentEndDelimiter="", commentPrefixes={}, transactionManager="", errorMode=DEFAULT, encoding="", separator="", dataSource="")), @org.springframework.boot.test.autoconfigure.restdocs.AutoConfigureRestDocs(uriScheme="http", outputDir="", uriPort=8080, value="", uriHost="localhost"), @org.springframework.context.annotation.Import(value={org.springframework.boot.test.autoconfigure.restdocs.RestDocumentationContextProviderRegistrar.class}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.restdocs", skip=NO), @org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc(webDriverEnabled=true, print=DEFAULT, webClientEnabled=true, printOnlyOnFailure=true, addFilters=true), @org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.context.SpringBootTestContextBootstrapper.class), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.mockmvc", skip=NO), @org.springframework.boot.test.context.SpringBootTest(args={}, webEnvironment=MOCK, value={}, properties={}, classes={})]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@68759011, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@423e4cbb, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7e809b79, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@5e403b4a], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true]], class annotated with @DirtiesContext [false] with mode [null].

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v2.7.6)

2023-08-02 15:49:23.784  INFO 17871 --- [    Test worker] c.e.kakao.cart.CartRestControllerTest    : Starting CartRestControllerTest using Java 11.0.18 on hoyaiui-MacBookAir.local with PID 17871 (started by lhh in /Users/lhh/kakao-6th-deploy)
2023-08-02 15:49:23.784 DEBUG 17871 --- [    Test worker] c.e.kakao.cart.CartRestControllerTest    : Running with Spring Boot v2.7.6, Spring v5.3.24
2023-08-02 15:49:23.784  INFO 17871 --- [    Test worker] c.e.kakao.cart.CartRestControllerTest    : The following 1 profile is active: "test"
2023-08-02 15:49:24.056  INFO 17871 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-08-02 15:49:24.083  INFO 17871 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 23 ms. Found 7 JPA repository interfaces.
2023-08-02 15:49:24.366  INFO 17871 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-08-02 15:49:24.391  INFO 17871 --- [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.14.Final
2023-08-02 15:49:24.469  INFO 17871 --- [    Test worker] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-08-02 15:49:24.487 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BooleanType@2707c790
2023-08-02 15:49:24.487 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BooleanType@2707c790
2023-08-02 15:49:24.488 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2707c790
2023-08-02 15:49:24.488 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@32b112a1
2023-08-02 15:49:24.488 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.TrueFalseType@56b9d43f
2023-08-02 15:49:24.488 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.YesNoType@595814a1
2023-08-02 15:49:24.489 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.ByteType@577f9dfd
2023-08-02 15:49:24.489 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.ByteType@577f9dfd
2023-08-02 15:49:24.489 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@577f9dfd
2023-08-02 15:49:24.489 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.CharacterType@592a1882
2023-08-02 15:49:24.489 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.CharacterType@592a1882
2023-08-02 15:49:24.489 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@592a1882
2023-08-02 15:49:24.490 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.ShortType@25fd6d1e
2023-08-02 15:49:24.490 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.ShortType@25fd6d1e
2023-08-02 15:49:24.490 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.ShortType@25fd6d1e
2023-08-02 15:49:24.490 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.IntegerType@50df37eb
2023-08-02 15:49:24.490 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.IntegerType@50df37eb
2023-08-02 15:49:24.490 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@50df37eb
2023-08-02 15:49:24.491 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.LongType@2e1add6f
2023-08-02 15:49:24.491 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.LongType@2e1add6f
2023-08-02 15:49:24.491 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.LongType@2e1add6f
2023-08-02 15:49:24.491 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.FloatType@12c76d6e
2023-08-02 15:49:24.491 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.FloatType@12c76d6e
2023-08-02 15:49:24.491 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.FloatType@12c76d6e
2023-08-02 15:49:24.492 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.DoubleType@56d822dc
2023-08-02 15:49:24.492 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.DoubleType@56d822dc
2023-08-02 15:49:24.492 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@56d822dc
2023-08-02 15:49:24.492 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@30eedaa4
2023-08-02 15:49:24.492 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@30eedaa4
2023-08-02 15:49:24.492 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5e51ec2e
2023-08-02 15:49:24.493 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5e51ec2e
2023-08-02 15:49:24.493 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.StringType@4ecd8ab1
2023-08-02 15:49:24.493 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.StringType@4ecd8ab1
2023-08-02 15:49:24.493 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.StringNVarcharType@145e958f
2023-08-02 15:49:24.493 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@d120d7c
2023-08-02 15:49:24.494 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.UrlType@30d15e4a
2023-08-02 15:49:24.494 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.UrlType@30d15e4a
2023-08-02 15:49:24.494 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.DurationType@243c4346
2023-08-02 15:49:24.494 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.DurationType@243c4346
2023-08-02 15:49:24.494 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Instant -> org.hibernate.type.InstantType@4be12f6c
2023-08-02 15:49:24.494 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4be12f6c
2023-08-02 15:49:24.495 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1fee4278
2023-08-02 15:49:24.495 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1fee4278
2023-08-02 15:49:24.495 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2b6262bc
2023-08-02 15:49:24.495 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2b6262bc
2023-08-02 15:49:24.496 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@e07b4db
2023-08-02 15:49:24.496 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@e07b4db
2023-08-02 15:49:24.496 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5a48d186
2023-08-02 15:49:24.496 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5a48d186
2023-08-02 15:49:24.496 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6dcf7b6a
2023-08-02 15:49:24.496 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6dcf7b6a
2023-08-02 15:49:24.497 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@79d4ff58
2023-08-02 15:49:24.497 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@79d4ff58
2023-08-02 15:49:24.497 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.DateType@6f2d3391
2023-08-02 15:49:24.497 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.DateType@6f2d3391
2023-08-02 15:49:24.498 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.TimeType@3ef0e576
2023-08-02 15:49:24.498 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3ef0e576
2023-08-02 15:49:24.498 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.TimestampType@2bfa17b0
2023-08-02 15:49:24.498 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2bfa17b0
2023-08-02 15:49:24.498 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2bfa17b0
2023-08-02 15:49:24.499 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@708dfe10
2023-08-02 15:49:24.499 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.CalendarType@4fa0ee7e
2023-08-02 15:49:24.499 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4fa0ee7e
2023-08-02 15:49:24.499 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4fa0ee7e
2023-08-02 15:49:24.499 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4ccdacf5
2023-08-02 15:49:24.499 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@74ce7fdf
2023-08-02 15:49:24.500 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.LocaleType@5a13f1f7
2023-08-02 15:49:24.500 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5a13f1f7
2023-08-02 15:49:24.500 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.CurrencyType@60816371
2023-08-02 15:49:24.500 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@60816371
2023-08-02 15:49:24.500 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.TimeZoneType@745926c3
2023-08-02 15:49:24.500 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@745926c3
2023-08-02 15:49:24.501 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.ClassType@1aac0a47
2023-08-02 15:49:24.501 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1aac0a47
2023-08-02 15:49:24.501 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@54bb1194
2023-08-02 15:49:24.501 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@54bb1194
2023-08-02 15:49:24.501 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4afdfc0f
2023-08-02 15:49:24.501 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BinaryType@5ed65e4b
2023-08-02 15:49:24.501 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BinaryType@5ed65e4b
2023-08-02 15:49:24.501 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BinaryType@5ed65e4b
2023-08-02 15:49:24.502 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@118cbded
2023-08-02 15:49:24.502 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@118cbded
2023-08-02 15:49:24.502 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@118cbded
2023-08-02 15:49:24.502 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.RowVersionType@543b0737
2023-08-02 15:49:24.502 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.ImageType@5350ab17
2023-08-02 15:49:24.503 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.CharArrayType@71ad959b
2023-08-02 15:49:24.503 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.CharArrayType@71ad959b
2023-08-02 15:49:24.503 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.CharArrayType@71ad959b
2023-08-02 15:49:24.503 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7198ab9a
2023-08-02 15:49:24.503 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7198ab9a
2023-08-02 15:49:24.503 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7198ab9a
2023-08-02 15:49:24.503 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.TextType@2913ca3e
2023-08-02 15:49:24.503 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.NTextType@734f8317
2023-08-02 15:49:24.504 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BlobType@4005e485
2023-08-02 15:49:24.504 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4005e485
2023-08-02 15:49:24.504 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@37d6dddc
2023-08-02 15:49:24.504 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.ClobType@314f59b
2023-08-02 15:49:24.504 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@314f59b
2023-08-02 15:49:24.505 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.NClobType@15e8c040
2023-08-02 15:49:24.505 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@15e8c040
2023-08-02 15:49:24.505 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2c674d58
2023-08-02 15:49:24.505 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2eb6d34a
2023-08-02 15:49:24.505 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.SerializableType@7f305f34
2023-08-02 15:49:24.507 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.ObjectType@1640f20f
2023-08-02 15:49:24.507 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1640f20f
2023-08-02 15:49:24.507 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@35010a6b
2023-08-02 15:49:24.507 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4d4b019e
2023-08-02 15:49:24.507 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7ed8b44
2023-08-02 15:49:24.507 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@21280cbb
2023-08-02 15:49:24.507 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1cc708a7
2023-08-02 15:49:24.507 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@995ad50
2023-08-02 15:49:24.507 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6249a08d
2023-08-02 15:49:24.507 DEBUG 17871 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@36525ab
2023-08-02 15:49:24.524  INFO 17871 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-08-02 15:49:24.613  INFO 17871 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2023-08-02 15:49:24.628  INFO 17871 --- [    Test worker] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-08-02 15:49:24.642 DEBUG 17871 --- [    Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@e8c84eb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@f44d033]
2023-08-02 15:49:24.744 DEBUG 17871 --- [    Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@e8c84eb] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@29ba63f0]
Hibernate: 
    
    drop table if exists cart_tb CASCADE 
Hibernate: 
    
    drop table if exists error_log_tb CASCADE 
Hibernate: 
    
    drop table if exists item_tb CASCADE 
Hibernate: 
    
    drop table if exists option_tb CASCADE 
Hibernate: 
    
    drop table if exists order_tb CASCADE 
Hibernate: 
    
    drop table if exists product_tb CASCADE 
Hibernate: 
    
    drop table if exists user_tb CASCADE 
Hibernate: 
    
    create table cart_tb (
       id integer generated by default as identity,
        price integer not null,
        quantity integer not null,
        option_id integer,
        user_id integer,
        primary key (id)
    )
Hibernate: 
    
    create table error_log_tb (
       id integer generated by default as identity,
        created_at timestamp,
        message varchar(1000) not null,
        user_agent varchar(255) not null,
        user_id integer,
        user_ip varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    
    create table item_tb (
       id integer generated by default as identity,
        price integer not null,
        quantity integer not null,
        option_id integer,
        order_id integer,
        primary key (id)
    )
Hibernate: 
    
    create table option_tb (
       id integer generated by default as identity,
        option_name varchar(100) not null,
        price integer not null,
        product_id integer,
        primary key (id)
    )
Hibernate: 
    
    create table order_tb (
       id integer generated by default as identity,
        user_id integer,
        primary key (id)
    )
Hibernate: 
    
    create table product_tb (
       id integer generated by default as identity,
        description varchar(1000) not null,
        image varchar(500),
        price integer not null,
        product_name varchar(100) not null,
        primary key (id)
    )
Hibernate: 
    
    create table user_tb (
       id integer generated by default as identity,
        email varchar(100) not null,
        password varchar(256) not null,
        roles varchar(30),
        username varchar(45) not null,
        primary key (id)
    )
Hibernate: create index cart_user_id_idx on cart_tb (user_id)
Hibernate: create index cart_option_id_idx on cart_tb (option_id)
Hibernate: 
    
    alter table cart_tb 
       add constraint uk_cart_option_user unique (user_id, option_id)
Hibernate: create index item_option_id_idx on item_tb (option_id)
Hibernate: create index item_order_id_idx on item_tb (order_id)
Hibernate: create index option_product_id_idx on option_tb (product_id)
Hibernate: create index order_user_id_idx on order_tb (user_id)
Hibernate: 
    
    alter table user_tb 
       add constraint UK_2dlfg6wvnxboknkp9d1h75icb unique (email)
Hibernate: 
    
    alter table cart_tb 
       add constraint FKjv34r03v7eauvpfhwsci0deyp 
       foreign key (option_id) 
       references option_tb
Hibernate: 
    
    alter table cart_tb 
       add constraint FKi00yw2m90df70t3igqyjbbf91 
       foreign key (user_id) 
       references user_tb
Hibernate: 
    
    alter table item_tb 
       add constraint FKbgcgxbitac3tct8kqsvyqm85f 
       foreign key (option_id) 
       references option_tb
Hibernate: 
    
    alter table item_tb 
       add constraint FKofe121qxhn816wo07qr9jr0hb 
       foreign key (order_id) 
       references order_tb
Hibernate: 
    
    alter table option_tb 
       add constraint FK6j02px4ow9xxw0o3rc59buyew 
       foreign key (product_id) 
       references product_tb
Hibernate: 
    
    alter table order_tb 
       add constraint FK9wkv8x8yfgaaquhn4vquq4aps 
       foreign key (user_id) 
       references user_tb
2023-08-02 15:49:24.921  INFO 17871 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-08-02 15:49:24.924 TRACE 17871 --- [    Test worker] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@29ba63f0] for TypeConfiguration
2023-08-02 15:49:24.924  INFO 17871 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-08-02 15:49:25.547  INFO 17871 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@39a1c200, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@603a34e5, org.springframework.security.web.context.SecurityContextPersistenceFilter@5006a697, org.springframework.security.web.header.HeaderWriterFilter@61d4155b, org.springframework.web.filter.CorsFilter@160d68b8, org.springframework.security.web.authentication.logout.LogoutFilter@a1689e8, com.example.kakao._core.security.JwtAuthenticationFilter@2af1bf5a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6ff87203, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@aaf4375, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1d77d9c6, org.springframework.security.web.session.SessionManagementFilter@489c15e2, org.springframework.security.web.access.ExceptionTranslationFilter@2f408960, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@19b33b0d]
2023-08-02 15:49:25.739  INFO 17871 --- [    Test worker] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:test'
2023-08-02 15:49:25.884  INFO 17871 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2023-08-02 15:49:25.885  INFO 17871 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2023-08-02 15:49:25.885  INFO 17871 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 0 ms
2023-08-02 15:49:25.894  INFO 17871 --- [    Test worker] c.e.kakao.cart.CartRestControllerTest    : Started CartRestControllerTest in 2.249 seconds (JVM running for 2.776)
Hibernate: 
    select
        user0_.id as id1_6_,
        user0_.email as email2_6_,
        user0_.password as password3_6_,
        user0_.roles as roles4_6_,
        user0_.username as username5_6_ 
    from
        user_tb user0_ 
    where
        user0_.email=?
2023-08-02 15:49:25.952 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [VARCHAR] - [ssarmango@nate.com]
2023-08-02 15:49:25.956 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([id1_6_] : [INTEGER]) - [1]
2023-08-02 15:49:25.958 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([email2_6_] : [VARCHAR]) - [ssarmango@nate.com]
2023-08-02 15:49:25.958 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([password3_6_] : [VARCHAR]) - [{bcrypt}$2a$10$8H0OT8wgtALJkig6fmypi.Y7jzI5Y7W9PGgRKqnVeS2cLWGifwHF2]
2023-08-02 15:49:25.958 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([roles4_6_] : [VARCHAR]) - [ROLE_USER]
2023-08-02 15:49:25.958 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([username5_6_] : [VARCHAR]) - [ssarmango]
2023-08-02 15:49:26.002  INFO 17871 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2023-08-02 15:49:26.002  INFO 17871 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2023-08-02 15:49:26.003  INFO 17871 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.option_id as option_i4_0_,
        cart0_.price as price2_0_,
        cart0_.quantity as quantity3_0_,
        cart0_.user_id as user_id5_0_ 
    from
        cart_tb cart0_ 
    left outer join
        user_tb user1_ 
            on cart0_.user_id=user1_.id 
    where
        user1_.id=?
2023-08-02 15:49:26.068 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [INTEGER] - [1]
2023-08-02 15:49:26.069 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([id1_0_] : [INTEGER]) - [1]
2023-08-02 15:49:26.069 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([option_i4_0_] : [INTEGER]) - [1]
2023-08-02 15:49:26.069 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([price2_0_] : [INTEGER]) - [50000]
2023-08-02 15:49:26.069 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([quantity3_0_] : [INTEGER]) - [5]
2023-08-02 15:49:26.069 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([user_id5_0_] : [INTEGER]) - [1]
2023-08-02 15:49:26.069 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([id1_0_] : [INTEGER]) - [2]
2023-08-02 15:49:26.069 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([option_i4_0_] : [INTEGER]) - [2]
2023-08-02 15:49:26.069 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([price2_0_] : [INTEGER]) - [10900]
2023-08-02 15:49:26.069 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([quantity3_0_] : [INTEGER]) - [1]
2023-08-02 15:49:26.069 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([user_id5_0_] : [INTEGER]) - [1]
2023-08-02 15:49:26.069 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([id1_0_] : [INTEGER]) - [3]
2023-08-02 15:49:26.069 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([option_i4_0_] : [INTEGER]) - [16]
2023-08-02 15:49:26.069 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([price2_0_] : [INTEGER]) - [250000]
2023-08-02 15:49:26.069 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([quantity3_0_] : [INTEGER]) - [5]
2023-08-02 15:49:26.069 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([user_id5_0_] : [INTEGER]) - [1]
테스트 : {"success":false,"response":null,"error":{"message":"동일한 장바구니 아이디가 들어옴","status":404}}

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /carts/update
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"55"]
             Body = [{"cartId":1,"quantity":10},{"cartId":1,"quantity":10}]
    Session Attrs = {}

Handler:
             Type = com.example.kakao.cart.CartRestController
           Method = com.example.kakao.cart.CartRestController#update(List, Errors, CustomUserDetails)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = com.example.kakao._core.errors.exception.Exception404

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"success":false,"response":null,"error":{"message":"동일한 장바구니 아이디가 들어옴","status":404}}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: 
    select
        user0_.id as id1_6_,
        user0_.email as email2_6_,
        user0_.password as password3_6_,
        user0_.roles as roles4_6_,
        user0_.username as username5_6_ 
    from
        user_tb user0_ 
    where
        user0_.email=?
2023-08-02 15:49:26.125 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [VARCHAR] - [ssarmango@nate.com]
2023-08-02 15:49:26.125 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([id1_6_] : [INTEGER]) - [1]
2023-08-02 15:49:26.125 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([email2_6_] : [VARCHAR]) - [ssarmango@nate.com]
2023-08-02 15:49:26.125 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([password3_6_] : [VARCHAR]) - [{bcrypt}$2a$10$8H0OT8wgtALJkig6fmypi.Y7jzI5Y7W9PGgRKqnVeS2cLWGifwHF2]
2023-08-02 15:49:26.125 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([roles4_6_] : [VARCHAR]) - [ROLE_USER]
2023-08-02 15:49:26.125 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([username5_6_] : [VARCHAR]) - [ssarmango]
2023-08-02 15:49:26.126  INFO 17871 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2023-08-02 15:49:26.126  INFO 17871 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2023-08-02 15:49:26.126  INFO 17871 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 0 ms
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.option_id as option_i4_0_,
        cart0_.price as price2_0_,
        cart0_.quantity as quantity3_0_,
        cart0_.user_id as user_id5_0_ 
    from
        cart_tb cart0_ 
    left outer join
        user_tb user1_ 
            on cart0_.user_id=user1_.id 
    where
        user1_.id=?
2023-08-02 15:49:26.128 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [INTEGER] - [1]
2023-08-02 15:49:26.128 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([id1_0_] : [INTEGER]) - [1]
2023-08-02 15:49:26.128 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([option_i4_0_] : [INTEGER]) - [1]
2023-08-02 15:49:26.128 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([price2_0_] : [INTEGER]) - [50000]
2023-08-02 15:49:26.128 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([quantity3_0_] : [INTEGER]) - [5]
2023-08-02 15:49:26.129 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([user_id5_0_] : [INTEGER]) - [1]
2023-08-02 15:49:26.129 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([id1_0_] : [INTEGER]) - [2]
2023-08-02 15:49:26.129 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([option_i4_0_] : [INTEGER]) - [2]
2023-08-02 15:49:26.129 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([price2_0_] : [INTEGER]) - [10900]
2023-08-02 15:49:26.129 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([quantity3_0_] : [INTEGER]) - [1]
2023-08-02 15:49:26.129 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([user_id5_0_] : [INTEGER]) - [1]
2023-08-02 15:49:26.129 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([id1_0_] : [INTEGER]) - [3]
2023-08-02 15:49:26.129 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([option_i4_0_] : [INTEGER]) - [16]
2023-08-02 15:49:26.129 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([price2_0_] : [INTEGER]) - [250000]
2023-08-02 15:49:26.129 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([quantity3_0_] : [INTEGER]) - [5]
2023-08-02 15:49:26.129 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([user_id5_0_] : [INTEGER]) - [1]
테스트 : {"success":false,"response":null,"error":{"message":"장바구니에 없는 cartId가 들어옴","status":404}}

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /carts/update
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"28"]
             Body = [{"cartId":20,"quantity":3}]
    Session Attrs = {}

Handler:
             Type = com.example.kakao.cart.CartRestController
           Method = com.example.kakao.cart.CartRestController#update(List, Errors, CustomUserDetails)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = com.example.kakao._core.errors.exception.Exception404

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"success":false,"response":null,"error":{"message":"장바구니에 없는 cartId가 들어옴","status":404}}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: 
    select
        user0_.id as id1_6_,
        user0_.email as email2_6_,
        user0_.password as password3_6_,
        user0_.roles as roles4_6_,
        user0_.username as username5_6_ 
    from
        user_tb user0_ 
    where
        user0_.email=?
2023-08-02 15:49:26.149 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [VARCHAR] - [ssarmango@nate.com]
2023-08-02 15:49:26.149 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([id1_6_] : [INTEGER]) - [1]
2023-08-02 15:49:26.149 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([email2_6_] : [VARCHAR]) - [ssarmango@nate.com]
2023-08-02 15:49:26.150 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([password3_6_] : [VARCHAR]) - [{bcrypt}$2a$10$8H0OT8wgtALJkig6fmypi.Y7jzI5Y7W9PGgRKqnVeS2cLWGifwHF2]
2023-08-02 15:49:26.150 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([roles4_6_] : [VARCHAR]) - [ROLE_USER]
2023-08-02 15:49:26.150 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([username5_6_] : [VARCHAR]) - [ssarmango]
2023-08-02 15:49:26.150  INFO 17871 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2023-08-02 15:49:26.150  INFO 17871 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2023-08-02 15:49:26.150  INFO 17871 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 0 ms
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.option_id as option_i4_0_,
        cart0_.price as price2_0_,
        cart0_.quantity as quantity3_0_,
        cart0_.user_id as user_id5_0_ 
    from
        cart_tb cart0_ 
    left outer join
        user_tb user1_ 
            on cart0_.user_id=user1_.id 
    where
        user1_.id=?
2023-08-02 15:49:26.152 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [INTEGER] - [1]
2023-08-02 15:49:26.152 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([id1_0_] : [INTEGER]) - [1]
2023-08-02 15:49:26.153 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([option_i4_0_] : [INTEGER]) - [1]
2023-08-02 15:49:26.153 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([price2_0_] : [INTEGER]) - [50000]
2023-08-02 15:49:26.153 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([quantity3_0_] : [INTEGER]) - [5]
2023-08-02 15:49:26.153 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([user_id5_0_] : [INTEGER]) - [1]
2023-08-02 15:49:26.153 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([id1_0_] : [INTEGER]) - [2]
2023-08-02 15:49:26.153 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([option_i4_0_] : [INTEGER]) - [2]
2023-08-02 15:49:26.153 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([price2_0_] : [INTEGER]) - [10900]
2023-08-02 15:49:26.153 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([quantity3_0_] : [INTEGER]) - [1]
2023-08-02 15:49:26.153 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([user_id5_0_] : [INTEGER]) - [1]
2023-08-02 15:49:26.153 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([id1_0_] : [INTEGER]) - [3]
2023-08-02 15:49:26.153 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([option_i4_0_] : [INTEGER]) - [16]
2023-08-02 15:49:26.153 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([price2_0_] : [INTEGER]) - [250000]
2023-08-02 15:49:26.153 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([quantity3_0_] : [INTEGER]) - [5]
2023-08-02 15:49:26.153 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([user_id5_0_] : [INTEGER]) - [1]
Hibernate: 
    select
        option0_.id as id1_3_0_,
        option0_.option_name as option_n2_3_0_,
        option0_.price as price3_3_0_,
        option0_.product_id as product_4_3_0_,
        product1_.id as id1_5_1_,
        product1_.description as descript2_5_1_,
        product1_.image as image3_5_1_,
        product1_.price as price4_5_1_,
        product1_.product_name as product_5_5_1_ 
    from
        option_tb option0_ 
    left outer join
        product_tb product1_ 
            on option0_.product_id=product1_.id 
    where
        option0_.id=?
2023-08-02 15:49:26.155 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [INTEGER] - [1]
2023-08-02 15:49:26.156 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([id1_5_1_] : [INTEGER]) - [1]
2023-08-02 15:49:26.156 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([option_n2_3_0_] : [VARCHAR]) - [01. 슬라이딩 지퍼백 크리스마스에디션 4종]
2023-08-02 15:49:26.156 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([price3_3_0_] : [INTEGER]) - [10000]
2023-08-02 15:49:26.156 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([product_4_3_0_] : [INTEGER]) - [1]
2023-08-02 15:49:26.156 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([descript2_5_1_] : [VARCHAR]) - []
2023-08-02 15:49:26.156 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([image3_5_1_] : [VARCHAR]) - [/images/1.jpg]
2023-08-02 15:49:26.156 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([price4_5_1_] : [INTEGER]) - [1000]
2023-08-02 15:49:26.156 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([product_5_5_1_] : [VARCHAR]) - [기본에 슬라이딩 지퍼백 크리스마스/플라워에디션 에디션 외 주방용품 특가전]
Hibernate: 
    select
        option0_.id as id1_3_0_,
        option0_.option_name as option_n2_3_0_,
        option0_.price as price3_3_0_,
        option0_.product_id as product_4_3_0_,
        product1_.id as id1_5_1_,
        product1_.description as descript2_5_1_,
        product1_.image as image3_5_1_,
        product1_.price as price4_5_1_,
        product1_.product_name as product_5_5_1_ 
    from
        option_tb option0_ 
    left outer join
        product_tb product1_ 
            on option0_.product_id=product1_.id 
    where
        option0_.id=?
2023-08-02 15:49:26.157 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [INTEGER] - [2]
2023-08-02 15:49:26.157 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([id1_5_1_] : [INTEGER]) - [1]
2023-08-02 15:49:26.157 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([option_n2_3_0_] : [VARCHAR]) - [02. 슬라이딩 지퍼백 플라워에디션 5종]
2023-08-02 15:49:26.157 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([price3_3_0_] : [INTEGER]) - [10900]
2023-08-02 15:49:26.157 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([product_4_3_0_] : [INTEGER]) - [1]
Hibernate: 
    select
        option0_.id as id1_3_0_,
        option0_.option_name as option_n2_3_0_,
        option0_.price as price3_3_0_,
        option0_.product_id as product_4_3_0_,
        product1_.id as id1_5_1_,
        product1_.description as descript2_5_1_,
        product1_.image as image3_5_1_,
        product1_.price as price4_5_1_,
        product1_.product_name as product_5_5_1_ 
    from
        option_tb option0_ 
    left outer join
        product_tb product1_ 
            on option0_.product_id=product1_.id 
    where
        option0_.id=?
2023-08-02 15:49:26.158 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [INTEGER] - [16]
2023-08-02 15:49:26.158 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([id1_5_1_] : [INTEGER]) - [4]
2023-08-02 15:49:26.158 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([option_n2_3_0_] : [VARCHAR]) - [선택02_바른곡물효소누룽지맛 6박스]
2023-08-02 15:49:26.158 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([price3_3_0_] : [INTEGER]) - [50000]
2023-08-02 15:49:26.158 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([product_4_3_0_] : [INTEGER]) - [4]
2023-08-02 15:49:26.158 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([descript2_5_1_] : [VARCHAR]) - []
2023-08-02 15:49:26.158 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([image3_5_1_] : [VARCHAR]) - [/images/4.jpg]
2023-08-02 15:49:26.158 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([price4_5_1_] : [INTEGER]) - [4000]
2023-08-02 15:49:26.158 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([product_5_5_1_] : [VARCHAR]) - [바른 누룽지맛 발효효소 2박스 역가수치보장 / 외 7종]
Hibernate: 
    update
        cart_tb 
    set
        option_id=?,
        price=?,
        quantity=?,
        user_id=? 
    where
        id=?
2023-08-02 15:49:26.166 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [INTEGER] - [1]
2023-08-02 15:49:26.166 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicBinder      : binding parameter [2] as [INTEGER] - [100000]
2023-08-02 15:49:26.166 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicBinder      : binding parameter [3] as [INTEGER] - [10]
2023-08-02 15:49:26.166 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicBinder      : binding parameter [4] as [INTEGER] - [1]
2023-08-02 15:49:26.166 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicBinder      : binding parameter [5] as [INTEGER] - [1]
테스트 : {"success":true,"response":{"carts":[{"cartId":1,"optionId":1,"optionName":"01. 슬라이딩 지퍼백 크리스마스에디션 4종","quantity":10,"price":100000},{"cartId":2,"optionId":2,"optionName":"02. 슬라이딩 지퍼백 플라워에디션 5종","quantity":1,"price":10900},{"cartId":3,"optionId":16,"optionName":"선택02_바른곡물효소누룽지맛 6박스","quantity":5,"price":250000}],"totalPrice":360900},"error":null}

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /carts/update
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"28"]
             Body = [{"cartId":1,"quantity":10}]
    Session Attrs = {}

Handler:
             Type = com.example.kakao.cart.CartRestController
           Method = com.example.kakao.cart.CartRestController#update(List, Errors, CustomUserDetails)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"success":true,"response":{"carts":[{"cartId":1,"optionId":1,"optionName":"01. 슬라이딩 지퍼백 크리스마스에디션 4종","quantity":10,"price":100000},{"cartId":2,"optionId":2,"optionName":"02. 슬라이딩 지퍼백 플라워에디션 5종","quantity":1,"price":10900},{"cartId":3,"optionId":16,"optionName":"선택02_바른곡물효소누룽지맛 6박스","quantity":5,"price":250000}],"totalPrice":360900},"error":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: 
    select
        user0_.id as id1_6_,
        user0_.email as email2_6_,
        user0_.password as password3_6_,
        user0_.roles as roles4_6_,
        user0_.username as username5_6_ 
    from
        user_tb user0_ 
    where
        user0_.email=?
2023-08-02 15:49:26.184 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [VARCHAR] - [ssarmango@nate.com]
2023-08-02 15:49:26.185 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([id1_6_] : [INTEGER]) - [1]
2023-08-02 15:49:26.185 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([email2_6_] : [VARCHAR]) - [ssarmango@nate.com]
2023-08-02 15:49:26.185 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([password3_6_] : [VARCHAR]) - [{bcrypt}$2a$10$8H0OT8wgtALJkig6fmypi.Y7jzI5Y7W9PGgRKqnVeS2cLWGifwHF2]
2023-08-02 15:49:26.185 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([roles4_6_] : [VARCHAR]) - [ROLE_USER]
2023-08-02 15:49:26.185 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([username5_6_] : [VARCHAR]) - [ssarmango]
2023-08-02 15:49:26.185  INFO 17871 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2023-08-02 15:49:26.185  INFO 17871 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2023-08-02 15:49:26.186  INFO 17871 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
테스트 : {"success":false,"response":null,"error":{"message":"동일한 옵션이 들어옴","status":404}}

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /carts/add
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"57"]
             Body = [{"optionId":3,"quantity":5},{"optionId":3,"quantity":6}]
    Session Attrs = {}

Handler:
             Type = com.example.kakao.cart.CartRestController
           Method = com.example.kakao.cart.CartRestController#addCartList(List, Errors, CustomUserDetails)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = com.example.kakao._core.errors.exception.Exception404

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"success":false,"response":null,"error":{"message":"동일한 옵션이 들어옴","status":404}}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: 
    select
        user0_.id as id1_6_,
        user0_.email as email2_6_,
        user0_.password as password3_6_,
        user0_.roles as roles4_6_,
        user0_.username as username5_6_ 
    from
        user_tb user0_ 
    where
        user0_.email=?
2023-08-02 15:49:26.214 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [VARCHAR] - [ssarmango@nate.com]
2023-08-02 15:49:26.214 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([id1_6_] : [INTEGER]) - [1]
2023-08-02 15:49:26.214 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([email2_6_] : [VARCHAR]) - [ssarmango@nate.com]
2023-08-02 15:49:26.214 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([password3_6_] : [VARCHAR]) - [{bcrypt}$2a$10$8H0OT8wgtALJkig6fmypi.Y7jzI5Y7W9PGgRKqnVeS2cLWGifwHF2]
2023-08-02 15:49:26.214 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([roles4_6_] : [VARCHAR]) - [ROLE_USER]
2023-08-02 15:49:26.214 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([username5_6_] : [VARCHAR]) - [ssarmango]
2023-08-02 15:49:26.215  INFO 17871 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2023-08-02 15:49:26.215  INFO 17871 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2023-08-02 15:49:26.215  INFO 17871 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 0 ms
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.option_id as option_i4_0_,
        cart0_.price as price2_0_,
        cart0_.quantity as quantity3_0_,
        cart0_.user_id as user_id5_0_ 
    from
        cart_tb cart0_ 
    where
        cart0_.option_id=? 
        and cart0_.user_id=?
2023-08-02 15:49:26.218 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [INTEGER] - [3]
2023-08-02 15:49:26.218 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicBinder      : binding parameter [2] as [INTEGER] - [1]
Hibernate: 
    select
        option0_.id as id1_3_0_,
        option0_.option_name as option_n2_3_0_,
        option0_.price as price3_3_0_,
        option0_.product_id as product_4_3_0_,
        product1_.id as id1_5_1_,
        product1_.description as descript2_5_1_,
        product1_.image as image3_5_1_,
        product1_.price as price4_5_1_,
        product1_.product_name as product_5_5_1_ 
    from
        option_tb option0_ 
    left outer join
        product_tb product1_ 
            on option0_.product_id=product1_.id 
    where
        option0_.id=?
2023-08-02 15:49:26.221 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [INTEGER] - [3]
2023-08-02 15:49:26.221 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([id1_5_1_] : [INTEGER]) - [1]
2023-08-02 15:49:26.222 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([option_n2_3_0_] : [VARCHAR]) - [고무장갑 베이지 S(소형) 6팩]
2023-08-02 15:49:26.222 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([price3_3_0_] : [INTEGER]) - [9900]
2023-08-02 15:49:26.222 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([product_4_3_0_] : [INTEGER]) - [1]
2023-08-02 15:49:26.222 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([descript2_5_1_] : [VARCHAR]) - []
2023-08-02 15:49:26.222 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([image3_5_1_] : [VARCHAR]) - [/images/1.jpg]
2023-08-02 15:49:26.222 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([price4_5_1_] : [INTEGER]) - [1000]
2023-08-02 15:49:26.222 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([product_5_5_1_] : [VARCHAR]) - [기본에 슬라이딩 지퍼백 크리스마스/플라워에디션 에디션 외 주방용품 특가전]
Hibernate: 
    insert 
    into
        cart_tb
        (id, option_id, price, quantity, user_id) 
    values
        (default, ?, ?, ?, ?)
2023-08-02 15:49:26.227 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [INTEGER] - [3]
2023-08-02 15:49:26.227 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicBinder      : binding parameter [2] as [INTEGER] - [49500]
2023-08-02 15:49:26.227 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicBinder      : binding parameter [3] as [INTEGER] - [5]
2023-08-02 15:49:26.227 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicBinder      : binding parameter [4] as [INTEGER] - [1]
테스트 : {"success":true,"response":null,"error":null}

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /carts/add
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"29"]
             Body = [{"optionId":3,"quantity":5}]
    Session Attrs = {}

Handler:
             Type = com.example.kakao.cart.CartRestController
           Method = com.example.kakao.cart.CartRestController#addCartList(List, Errors, CustomUserDetails)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"success":true,"response":null,"error":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: 
    select
        user0_.id as id1_6_,
        user0_.email as email2_6_,
        user0_.password as password3_6_,
        user0_.roles as roles4_6_,
        user0_.username as username5_6_ 
    from
        user_tb user0_ 
    where
        user0_.email=?
2023-08-02 15:49:26.241 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [VARCHAR] - [ssarmango@nate.com]
2023-08-02 15:49:26.241 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([id1_6_] : [INTEGER]) - [1]
2023-08-02 15:49:26.241 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([email2_6_] : [VARCHAR]) - [ssarmango@nate.com]
2023-08-02 15:49:26.241 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([password3_6_] : [VARCHAR]) - [{bcrypt}$2a$10$8H0OT8wgtALJkig6fmypi.Y7jzI5Y7W9PGgRKqnVeS2cLWGifwHF2]
2023-08-02 15:49:26.241 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([roles4_6_] : [VARCHAR]) - [ROLE_USER]
2023-08-02 15:49:26.241 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([username5_6_] : [VARCHAR]) - [ssarmango]
2023-08-02 15:49:26.242  INFO 17871 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2023-08-02 15:49:26.242  INFO 17871 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2023-08-02 15:49:26.242  INFO 17871 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 0 ms
Hibernate: 
    select
        cart0_.id as id1_0_,
        cart0_.option_id as option_i4_0_,
        cart0_.price as price2_0_,
        cart0_.quantity as quantity3_0_,
        cart0_.user_id as user_id5_0_ 
    from
        cart_tb cart0_ 
    where
        cart0_.user_id=? 
    order by
        cart0_.option_id asc
2023-08-02 15:49:26.243 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [INTEGER] - [1]
2023-08-02 15:49:26.243 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([id1_0_] : [INTEGER]) - [1]
2023-08-02 15:49:26.244 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([option_i4_0_] : [INTEGER]) - [1]
2023-08-02 15:49:26.244 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([price2_0_] : [INTEGER]) - [50000]
2023-08-02 15:49:26.244 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([quantity3_0_] : [INTEGER]) - [5]
2023-08-02 15:49:26.244 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([user_id5_0_] : [INTEGER]) - [1]
2023-08-02 15:49:26.244 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([id1_0_] : [INTEGER]) - [2]
2023-08-02 15:49:26.244 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([option_i4_0_] : [INTEGER]) - [2]
2023-08-02 15:49:26.244 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([price2_0_] : [INTEGER]) - [10900]
2023-08-02 15:49:26.244 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([quantity3_0_] : [INTEGER]) - [1]
2023-08-02 15:49:26.244 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([user_id5_0_] : [INTEGER]) - [1]
2023-08-02 15:49:26.244 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([id1_0_] : [INTEGER]) - [3]
2023-08-02 15:49:26.244 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([option_i4_0_] : [INTEGER]) - [16]
2023-08-02 15:49:26.244 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([price2_0_] : [INTEGER]) - [250000]
2023-08-02 15:49:26.244 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([quantity3_0_] : [INTEGER]) - [5]
2023-08-02 15:49:26.244 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([user_id5_0_] : [INTEGER]) - [1]
Hibernate: 
    select
        option0_.id as id1_3_0_,
        option0_.option_name as option_n2_3_0_,
        option0_.price as price3_3_0_,
        option0_.product_id as product_4_3_0_,
        product1_.id as id1_5_1_,
        product1_.description as descript2_5_1_,
        product1_.image as image3_5_1_,
        product1_.price as price4_5_1_,
        product1_.product_name as product_5_5_1_ 
    from
        option_tb option0_ 
    left outer join
        product_tb product1_ 
            on option0_.product_id=product1_.id 
    where
        option0_.id=?
2023-08-02 15:49:26.245 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [INTEGER] - [1]
2023-08-02 15:49:26.245 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([id1_5_1_] : [INTEGER]) - [1]
2023-08-02 15:49:26.245 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([option_n2_3_0_] : [VARCHAR]) - [01. 슬라이딩 지퍼백 크리스마스에디션 4종]
2023-08-02 15:49:26.245 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([price3_3_0_] : [INTEGER]) - [10000]
2023-08-02 15:49:26.245 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([product_4_3_0_] : [INTEGER]) - [1]
2023-08-02 15:49:26.245 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([descript2_5_1_] : [VARCHAR]) - []
2023-08-02 15:49:26.245 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([image3_5_1_] : [VARCHAR]) - [/images/1.jpg]
2023-08-02 15:49:26.245 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([price4_5_1_] : [INTEGER]) - [1000]
2023-08-02 15:49:26.245 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([product_5_5_1_] : [VARCHAR]) - [기본에 슬라이딩 지퍼백 크리스마스/플라워에디션 에디션 외 주방용품 특가전]
Hibernate: 
    select
        option0_.id as id1_3_0_,
        option0_.option_name as option_n2_3_0_,
        option0_.price as price3_3_0_,
        option0_.product_id as product_4_3_0_,
        product1_.id as id1_5_1_,
        product1_.description as descript2_5_1_,
        product1_.image as image3_5_1_,
        product1_.price as price4_5_1_,
        product1_.product_name as product_5_5_1_ 
    from
        option_tb option0_ 
    left outer join
        product_tb product1_ 
            on option0_.product_id=product1_.id 
    where
        option0_.id=?
2023-08-02 15:49:26.246 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [INTEGER] - [2]
2023-08-02 15:49:26.247 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([id1_5_1_] : [INTEGER]) - [1]
2023-08-02 15:49:26.247 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([option_n2_3_0_] : [VARCHAR]) - [02. 슬라이딩 지퍼백 플라워에디션 5종]
2023-08-02 15:49:26.247 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([price3_3_0_] : [INTEGER]) - [10900]
2023-08-02 15:49:26.247 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([product_4_3_0_] : [INTEGER]) - [1]
Hibernate: 
    select
        option0_.id as id1_3_0_,
        option0_.option_name as option_n2_3_0_,
        option0_.price as price3_3_0_,
        option0_.product_id as product_4_3_0_,
        product1_.id as id1_5_1_,
        product1_.description as descript2_5_1_,
        product1_.image as image3_5_1_,
        product1_.price as price4_5_1_,
        product1_.product_name as product_5_5_1_ 
    from
        option_tb option0_ 
    left outer join
        product_tb product1_ 
            on option0_.product_id=product1_.id 
    where
        option0_.id=?
2023-08-02 15:49:26.247 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [INTEGER] - [16]
2023-08-02 15:49:26.247 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([id1_5_1_] : [INTEGER]) - [4]
2023-08-02 15:49:26.247 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([option_n2_3_0_] : [VARCHAR]) - [선택02_바른곡물효소누룽지맛 6박스]
2023-08-02 15:49:26.247 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([price3_3_0_] : [INTEGER]) - [50000]
2023-08-02 15:49:26.247 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([product_4_3_0_] : [INTEGER]) - [4]
2023-08-02 15:49:26.247 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([descript2_5_1_] : [VARCHAR]) - []
2023-08-02 15:49:26.247 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([image3_5_1_] : [VARCHAR]) - [/images/4.jpg]
2023-08-02 15:49:26.247 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([price4_5_1_] : [INTEGER]) - [4000]
2023-08-02 15:49:26.247 TRACE 17871 --- [    Test worker] o.h.type.descriptor.sql.BasicExtractor   : extracted value ([product_5_5_1_] : [VARCHAR]) - [바른 누룽지맛 발효효소 2박스 역가수치보장 / 외 7종]
테스트 : {"success":true,"response":{"products":[{"id":1,"productName":"기본에 슬라이딩 지퍼백 크리스마스/플라워에디션 에디션 외 주방용품 특가전","carts":[{"id":1,"option":{"id":1,"optionName":"01. 슬라이딩 지퍼백 크리스마스에디션 4종","price":10000},"quantity":5,"price":50000},{"id":2,"option":{"id":2,"optionName":"02. 슬라이딩 지퍼백 플라워에디션 5종","price":10900},"quantity":1,"price":10900}]},{"id":4,"productName":"바른 누룽지맛 발효효소 2박스 역가수치보장 / 외 7종","carts":[{"id":3,"option":{"id":16,"optionName":"선택02_바른곡물효소누룽지맛 6박스","price":50000},"quantity":5,"price":250000}]}],"totalPrice":310900},"error":null}

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /carts
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = com.example.kakao.cart.CartRestController
           Method = com.example.kakao.cart.CartRestController#findAll(CustomUserDetails)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"success":true,"response":{"products":[{"id":1,"productName":"기본에 슬라이딩 지퍼백 크리스마스/플라워에디션 에디션 외 주방용품 특가전","carts":[{"id":1,"option":{"id":1,"optionName":"01. 슬라이딩 지퍼백 크리스마스에디션 4종","price":10000},"quantity":5,"price":50000},{"id":2,"option":{"id":2,"optionName":"02. 슬라이딩 지퍼백 플라워에디션 5종","price":10900},"quantity":1,"price":10900}]},{"id":4,"productName":"바른 누룽지맛 발효효소 2박스 역가수치보장 / 외 7종","carts":[{"id":3,"option":{"id":16,"optionName":"선택02_바른곡물효소누룽지맛 6박스","price":50000},"quantity":5,"price":250000}]}],"totalPrice":310900},"error":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
